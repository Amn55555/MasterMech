<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9SKNILP0wDay1n2MWy3mFxzDGW/SaSupFrqRa0XkERQqj3KOQn6unQF2CLl8bjgZbAwNx8cDlzlc25BX
        PRtYrcMpZGB3NdZyPTvLrLBkeBw45SJ7RcOptGp4lpLTpdZpjar2Bhtc0jkuoXoVKgdeeCOuMS86bTJW
        oSpFRRyCqAoHuA5TUt4Jpms75tPS1mQd5rQsSpypJxkkHofCWz/U5fPAm5Ad6W4vp7WG0rwy2xl/NL20
        8v8AK3ylT0Ons/AvDrSm6xrtGlVZ/N75bDz8O8ZdxP5oT82dUOkr7w2mte8Kd2X2jcUBJCluu3JJx05m
        fi6Ovai92mK8FF2jCEDA2D+rgcuUKduHL8/uLlT0qCri1y7sunD1cseRax7rGdvjsHIcgMDoBIThuiLc
        I4VVj66+3REAeFNJFpPsUIjMfDdYfOXjtBp1XT6q5Kg130exQypusbCNtUEDcefQe2bPDOHV1V1AIoZK
        kp3YG7aoAC5645dJGfS5BX+yVoH4UYkZ+m6hsZ54VK1zj4SC7E3ql3C1tYKv4I31ljgF3sra3BPLO1UP
        unQK+GULvK01qbN28hFBfcctvIHrZJ55nxdwjTvXXU9FT114CI1aMqADC7FIwuAAOXlGda9QVviPdPdw
        daEC1fSbbECgBdiae7DKBy2kkMD4hgfGZuxesUfSgT6z8S1iAeOVJPPyGF/ePOWV9LWXSxkUum7YxAJT
        cMNtPhkDBxI3jPD9mn1dukpQap6bdroqq72bDsy/UndjqYunoCrVacUaviyW47quizWVg+C6lSb/AGY3
        0H/E3nLh2Z0jU6HS0t9pKKkOfMIAf3yPo0JurqratlUV1pbbaB3lqpg91z9YgtzYtyIJAzuytkiUrkiI
        iUIEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERA
        EREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAERE
        AREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREARE
        QBERAEREAREQD//Z
</value>
  </data>
</root>